services:
  bot:
    container_name: imperia_bot_prod
    image: imperia_bot_prod
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - path: "../.env.prod"
        required: true
    depends_on:
      - postgresql
      - dragonfly
    volumes:
      - ../src/:/app/src/
    networks:
      - imperia-network
  postgresql:
    container_name: imperia_pg_prod
    image: postgres:latest
    env_file:
      - path: "../.env"
        required: true
    ports:
      - '5432:5432'
    environment:
        POSTGRES_USER: ${DOCKER_DB_USER}
        POSTGRES_PASSWORD: ${DOCKER_DB_PASSWORD}
        POSTGRES_DB: ${DOCKER_DB_NAME}
    volumes:
      - ./data/postgresqldata:/var/lib/postgresql/data
    networks:
      - imperia-network
    restart: always
  dragonfly:
    container_name: imperia_dragonfly_prod
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    command: --cluster_mode=emulated --lock_on_hashtags
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - ./data/dragonflydata:/data
    networks:
      - imperia-network
networks:
  imperia-network:
    driver: bridge
volumes:
  postgresqldata:
  dragonflydata: